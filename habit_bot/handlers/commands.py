import logging

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from app.db.database import get_async_session
from app.models import User
from habit_bot.bot_init import bot
from habit_bot.button_menu import create_user_menu, get_habit_list_menu, sign_in_menu, sign_up_menu, edit_profile_menu
from habit_bot.crud.users.user_info import get_user_info
from habit_bot.states_group.states import UserRegistration, CreateHabit
from services.handlers import  get_completed_habit_list, get_user_by_bot_user_id, get_not_completed_habit_list

logging.basicConfig(level=logging.INFO)
logger: logging.Logger = logging.getLogger(__name__)

router = Router()


@router.message(Command(commands=['start']))
async def start(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É '/start' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –£–¥–∞–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞.
    2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ.
    3. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –æ–±–Ω–æ–≤–ª—è–µ—Ç –µ–≥–æ chat_id –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.
    4. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –µ–º—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.

    Args:
    message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∫–æ–º–∞–Ω–¥—É '/start'.

    Returns:
    None
    """
    bot_user_id = message.from_user.id
    chat_id = message.chat.id
    logger.warning(f"message.chat.id - {message.chat.id}, message_id - {message.message_id}")
    try:
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")

    user = await get_user_by_bot_user_id(bot_user_id)
    # keyboard, action = await create_static_main_menu(user)
    # await clear_message_in_chat(chat_id, bot_user_id)

    if isinstance(user, User):
        logger.warning(f"bot_user_id - {bot_user_id}, chat_id - {message.message_id}")
        async with get_async_session() as session:
            user = await get_user_by_bot_user_id(bot_user_id)
            user.chat_id = chat_id
            session.add(user)
            await session.commit()
        sent_message = await message.answer(
           f"–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–í–æ–π—Ç–∏' ‚¨áÔ∏è",
           reply_markup=await sign_in_menu(),
           parse_mode='Markdown',
        )
        # await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)
    else:
        sent_message = await message.answer(
            "–î–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è ‚¨áÔ∏è",
            reply_markup=await sign_up_menu(),
            parse_mode='Markdown',
        )
#         await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)


@router.message(Command(commands=['help']))
async def send_help(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É '/help' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π '/help' –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞.
    2. –û—á–∏—â–∞–µ—Ç —á–∞—Ç –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞.

    Args:
       message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∫–æ–º–∞–Ω–¥—É '/help'.

    Returns:
       None
    """
    bot_user_id = message.from_user.id
    try:
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")
    try:
        logger.info("Start item Help")
        # await clear_message_in_chat(message.chat.id, bot_user_id)
        sent_message = await message.answer(
            "–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!",
            parse_mode='Markdown'
        )
#         await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)
    except Exception as e:
        logger.error(f"Error in send_help: {e}")


@router.message(Command(commands=['about']))
async def send_about(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É '/about' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π '/about' –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞.
    2. –û—á–∏—â–∞–µ—Ç —á–∞—Ç –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–µ—Ä–≤–∏—Å–∞ –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É '/about'.

    Returns:
        None
    """
    bot_user_id = message.from_user.id
    try:
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")
    try:
        logger.info("Start item About")
#         await clear_message_in_chat(message.chat.id, bot_user_id)
        sent_message = await message.answer(
            "–°–µ—Ä–≤–∏—Å –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫.\n"
            "–° –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–∂–Ω–æ:\n\n"
            "_-–¥–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª—è—Ç—å –ø—Ä–∏–≤—ã—á–∫–∏_\n"
            "_-—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—á–µ–∫_\n"
            "_-–ø–æ–ª—É—á–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫_\n"
            "_-–≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥ –Ω–∞–¥–µ–∂–Ω–æ–π –∑–∞—â–∏—Ç–æ–π_\n\n"
            "–°–µ—Ä–≤–∏—Å –ø–æ–º–æ–∂–µ—Ç –¥–æ—Å—Ç–∏—á—å –ª–∏—á–Ω—ã–µ —Ü–µ–ª–∏ –Ω–∞ –ø—É—Ç–∏ —Å–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è.\n"
            "–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç —Å—Ç–∞–Ω–µ—Ç —É–¥–æ–±–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ø–æ–ª–µ–∑–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ—Å—Ç—å",
            parse_mode='Markdown'
        )
#         await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)
    except Exception as e:
        logger.error(f"Error in send_about: {e}")


@router.message(Command(commands=['contact']))
async def send_contact(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É '/contact' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π '/about' –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞.
    2. –û—á–∏—â–∞–µ—Ç —á–∞—Ç –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–µ—Ä–≤–∏—Å–∞ –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É '/contact'.

    Returns:
        None
    """
    bot_user_id = message.from_user.id
    try:
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")
#         await clear_message_in_chat(message.chat.id, bot_user_id)
    try:
        logger.info("Start item Contact")
        sent_message = await message.answer(
            "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ –∞–¥—Ä–µ—Å—É: contact@example.com",
            parse_mode='Markdown'
        )
#         await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)
    except Exception as e:
        logger.error(f"Error in send_contact: {e}")


@router.message(lambda message: message.text == 'üë§ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
async def user_registration(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º 'üë§ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è' –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞.
    2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM (Finite State Machine) –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    3. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ –ø–æ–ª–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    Args:
       message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–Ω–∏—Ü–∏–∏—Ä—É—é—â–µ–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.
       state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.

    Returns:
       None
    """
    bot_user_id = message.from_user.id
    try:
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")
#     await clear_message_in_chat(message.chat.id, bot_user_id)
    await state.set_state(UserRegistration.nickname)
    sent_message = await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏:")
#     await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)


@router.message(lambda message: message.text == 'üìñ –í–æ–π—Ç–∏')
async def entry_user(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º 'üìñ –í–æ–π—Ç–∏' –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞.
    2. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ–Ω—é —Å –æ–ø—Ü–∏—è–º–∏.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–Ω–∏—Ü–∏–∏—Ä—É—é—â–µ–µ –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É.

    Returns:
        None
    """
    bot_user_id = message.from_user.id
    try:
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")
#     await clear_message_in_chat(message.chat.id, bot_user_id)
    sent_message = await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=await create_user_menu())
#     await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)


@router.message(lambda message: message.text == '–ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏')
async def entry_user(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º '–ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏' –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞.
    2. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    3. –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
    4. –ï—Å–ª–∏ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç–∞–∫–∏—Ö –ø—Ä–∏–≤—ã—á–µ–∫.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–Ω–∏—Ü–∏–∏—Ä—É—é—â–µ–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫.

    Returns:
        None
    """
    bot_user_id = message.from_user.id
    try:
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")

#     await clear_message_in_chat(message.chat.id, bot_user_id)

    habit_list = await get_not_completed_habit_list(bot_user_id)
    if habit_list != []:
        habit_menu = await get_habit_list_menu(habit_list)
        sent_message = await message.answer(
            "*–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏:*\n_–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–∏–≤—ã—á–∫–∏_",
            reply_markup=habit_menu, parse_mode="Markdown"
        )
#         await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)
    else:
        sent_message = await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏!", reply_markup=await create_user_menu())
#         await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)



@router.message(lambda message: message.text == '–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫—É')
async def entry_user(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—Ä–∏–≤—ã—á–∫–∏.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º '–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫—É' –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞.
    2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π –ø—Ä–∏–≤—ã—á–∫–∏.
    3. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–Ω–∏—Ü–∏–∏—Ä—É—é—â–µ–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—Ä–∏–≤—ã—á–∫–∏.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns:
        None
    """
    bot_user_id = message.from_user.id
    try:
        # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç –∫–Ω–æ–ø–∫–∏
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")
#     await clear_message_in_chat(message.chat.id, bot_user_id)
    await state.set_state(CreateHabit.habit_name)
    sent_message = await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏:", parse_mode='Markdown')
#     await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)


@router.message(lambda message: message.text == "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏")
async def completed_habits(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏' –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞.
    2. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Ç–∞–∫–∏—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –Ω–µ—Ç.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–Ω–∏—Ü–∏–∏—Ä—É—é—â–µ–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫.

    Returns:
        None
    """
    bot_user_id = message.from_user.id
    try:
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")
#     await clear_message_in_chat(message.chat.id, bot_user_id)

    completed_list = await get_completed_habit_list(bot_user_id)
    if completed_list is None:
        sent_message = await message.answer(
            "–£ –≤–∞—Å –Ω–µ—Ç –µ—â–µ –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏.",
            parse_mode='Markdown',
            reply_markup=await create_user_menu()
        )
#         await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)
    else:
        completed_habit_menu = await get_habit_list_menu(completed_list)
        sent_message = await message.answer(
            "–°–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫.",
            parse_mode='Markdown',
            reply_markup=completed_habit_menu
        )
#         await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)



@router.message(lambda message: message.text == '–ü—Ä–æ—Ñ–∏–ª—å')
async def user_info(message: Message):
    logger.info("Start get profile")
    bot_user_id = message.from_user.id
    try:
        await bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message.message_id}: {e}")
#     await clear_message_in_chat(message.chat.id, bot_user_id)
    user_info = await get_user_info(bot_user_id)
    if user_info:
        sent_message = await message.answer(
            f"*–ü—Ä–æ—Ñ–∏–ª—å:* \n{user_info}",
            parse_mode='Markdown',
            reply_markup=await edit_profile_menu(bot_user_id),
        )
#         await record_message_id(message.chat.id, sent_message.message_id, bot_user_id)
